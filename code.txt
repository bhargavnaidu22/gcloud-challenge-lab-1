1)gcloud config set compute/zone us-east1-b
2)gcloud container clusters create nucleus-jumphost-webserver1
3)gcloud container clusters get-credentials nucleus-jumphost-webserver1
4)kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:2.0
5)kubectl expose deployment hello-app --type=LoadBalancer --port 8080
6)kubectl get service
7)cat << EOF > startup.sh
> #! /bin/bash
> apt-get update
> apt-get install -y nginx
> service nginx start
> sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
> EOF
8)gcloud compute instance-templates create nginx-template --metadata-from-file startup-scripts=startup.sh
9)gcloud compute target-pools create nginx-pool
10)enter (y/n)   n
11)enter the yotur numeric choice : 23
12)gcloud compute instance-groups managed create nginx-group \
--base-instance-name niginx \
--size 2 \
--template nginx-template \
--target-pool nginx-pool
13)gcloud compute instances list
14)gcloud compute firewall-rules create www-firewall --allow tcp:80
15)gcloud compute forwarding-rules create nginx-lb \
--region us-east1 \
--ports=80 \
--target-pool nginx-pool
13)gcloud compute forwarding-rules list
14)gcloud compute http-health-checks create http-basic-check
15)gcloud compute instance-groups managed set-named-ports nginx-group --named-ports http:80
16)gcloud compute backend-services create nginx-backend \
--protocol HTTP --http-health-checks http-basic-check --global
17)gcloud compute backend-services add-backend nginx-backend \
--instance-group nginx-group \
--instance-group-zone us-east1-b \
--global
18)gcloud compute url-maps create web-map --default-service nginx-backend
19) gcloud compute target-http-proxies create http-lb-proxy --url-map web-map
20)gcloud compute forwarding-rules create http-content-rule \
--global \
--target-http-proxy http-lb-proxy \
--ports 80
21) gcloud compute forwarding-rules list
